{"ast":null,"code":"var _jsxFileName = \"/Users/jaydenj/Desktop/Canvas-Assistant-Bot/chatbot-frontend/src/ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport meProfilePhotoUrl from './circle.svg';\nimport chatProfilePhotoUrl from './circlelogo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatApp() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [accessToken, setAccessToken] = useState('');\n  const [loading, setLoading] = useState(false); // State to track loading status\n\n  const sendMessage = async () => {\n    try {\n      // Set loading state to true\n      setLoading(true);\n\n      // Add the user's message to the messages array with \"Me: \" prefix and timestamp\n      const currentTime = new Date().toLocaleTimeString();\n      const userMessage = inputMessage;\n      const updatedMessages = [...messages, {\n        sender: 'Me',\n        text: userMessage,\n        timestamp: currentTime,\n        profilePhotoUrl: meProfilePhotoUrl\n      }];\n      setMessages(updatedMessages);\n\n      // Clear the input field\n      setInputMessage('');\n\n      // Make a request to the Flask API endpoint with the user's message and access token\n      const response = await axios.post('http://127.0.0.1:4000/chatbot', {\n        message: inputMessage,\n        access_token: accessToken\n      });\n      const chatbotResponse = response.data.response;\n\n      // Add the chatbot's response to the messages array with timestamp\n      const botMessage = chatbotResponse;\n      const updatedMessagesWithBotResponse = [...updatedMessages, {\n        sender: 'Chatterbox',\n        text: botMessage,\n        timestamp: currentTime,\n        profilePhotoUrl: chatProfilePhotoUrl\n      }];\n      setMessages(updatedMessagesWithBotResponse);\n    } catch (error) {\n      console.error('Error sending message to chatbot:', error);\n    } finally {\n      // Set loading state to false after response or error\n      setLoading(false);\n    }\n  };\n  const handleSendMessage = () => {\n    if (accessToken) {\n      sendMessage();\n    } else {\n      window.alert('Please fill in the access token.');\n    }\n  };\n  const handlePullDocuments = async () => {\n    try {\n      // Make a request to the Flask API endpoint to pull documents\n      await axios.post('http://127.0.0.1:4000/pull', {\n        access_token: accessToken\n      });\n      // Show pop-up message\n      window.alert('Access token submitted!');\n    } catch (error) {\n      console.error('Error pulling documents:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: accessToken,\n        onChange: e => setAccessToken(e.target.value),\n        placeholder: \"Paste your access token...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePullDocuments,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'Me' ? 'user' : 'Chatterbox'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: message.profilePhotoUrl,\n          alt: message.sender,\n          className: \"profile-photo\",\n          style: {\n            width: '40px',\n            height: '40px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: message.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: message.text\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timestamp\",\n            children: message.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-text\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatApp, \"B19qnAu/aPalyWBl9NeuWxs6H+Y=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","axios","meProfilePhotoUrl","chatProfilePhotoUrl","jsxDEV","_jsxDEV","ChatApp","_s","messages","setMessages","inputMessage","setInputMessage","accessToken","setAccessToken","loading","setLoading","sendMessage","currentTime","Date","toLocaleTimeString","userMessage","updatedMessages","sender","text","timestamp","profilePhotoUrl","response","post","message","access_token","chatbotResponse","data","botMessage","updatedMessagesWithBotResponse","error","console","handleSendMessage","window","alert","handlePullDocuments","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","src","alt","style","width","height","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/jaydenj/Desktop/Canvas-Assistant-Bot/chatbot-frontend/src/ChatApp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport meProfilePhotoUrl from './circle.svg';\nimport chatProfilePhotoUrl from './circlelogo.svg';\n\nfunction ChatApp() {\n    const [messages, setMessages] = useState([]);\n    const [inputMessage, setInputMessage] = useState('');\n    const [accessToken, setAccessToken] = useState('');\n    const [loading, setLoading] = useState(false); // State to track loading status\n\n    const sendMessage = async () => {\n        try {\n            // Set loading state to true\n            setLoading(true);\n\n            // Add the user's message to the messages array with \"Me: \" prefix and timestamp\n            const currentTime = new Date().toLocaleTimeString();\n            const userMessage = inputMessage;\n            const updatedMessages = [...messages, { sender: 'Me', text: userMessage, timestamp: currentTime, profilePhotoUrl: meProfilePhotoUrl }];\n            setMessages(updatedMessages);\n\n            // Clear the input field\n            setInputMessage('');\n\n            // Make a request to the Flask API endpoint with the user's message and access token\n            const response = await axios.post('http://127.0.0.1:4000/chatbot', { message: inputMessage, access_token: accessToken });\n            const chatbotResponse = response.data.response;\n\n            // Add the chatbot's response to the messages array with timestamp\n            const botMessage = chatbotResponse;\n            const updatedMessagesWithBotResponse = [...updatedMessages, { sender: 'Chatterbox', text: botMessage, timestamp: currentTime, profilePhotoUrl: chatProfilePhotoUrl }];\n            setMessages(updatedMessagesWithBotResponse);\n\n        } catch (error) {\n            console.error('Error sending message to chatbot:', error);\n        } finally {\n            // Set loading state to false after response or error\n            setLoading(false);\n        }\n    };\n\n    const handleSendMessage = () => {\n        if (accessToken) {\n            sendMessage();\n        } else {\n            window.alert('Please fill in the access token.');\n        }\n    };\n\n    const handlePullDocuments = async () => {\n        try {\n            // Make a request to the Flask API endpoint to pull documents\n            await axios.post('http://127.0.0.1:4000/pull', { access_token: accessToken });\n            // Show pop-up message\n            window.alert('Access token submitted!');\n        } catch (error) {\n            console.error('Error pulling documents:', error);\n        }\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"input-box\">\n                <input\n                    type=\"text\"\n                    value={accessToken}\n                    onChange={(e) => setAccessToken(e.target.value)}\n                    placeholder=\"Paste your access token...\"\n                />\n                <button onClick={handlePullDocuments}>Submit</button>\n            </div>\n            <div className=\"chat-window\">\n                {messages.map((message, index) => (\n                    <div key={index} className={`message ${message.sender === 'Me' ? 'user' : 'Chatterbox'}`}>\n                        <img src={message.profilePhotoUrl} alt={message.sender} className=\"profile-photo\" style={{ width: '40px', height: '40px' }} />\n                        <div>\n                            <div><strong>{message.sender}</strong></div>\n                            <div dangerouslySetInnerHTML={{ __html: message.text }}></div>\n                            <span className=\"timestamp\">{message.timestamp}</span>\n                        </div>\n                    </div>\n                ))}\n                {loading && <div className=\"loading-text\">Loading...</div>}\n            </div>\n            <div className=\"input-box\">\n                <input\n                    type=\"text\"\n                    value={inputMessage}\n                    onChange={(e) => setInputMessage(e.target.value)}\n                    placeholder=\"Type your message...\"\n                />\n                <button onClick={handleSendMessage}>Send</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ChatApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}