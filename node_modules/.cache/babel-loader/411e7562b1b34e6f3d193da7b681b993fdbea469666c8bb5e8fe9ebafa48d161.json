{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import meProfilePhotoUrl from'./circle.svg';import chatProfilePhotoUrl from'./circlelogo.svg';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatApp(){const[messages,setMessages]=useState([]);const[inputMessage,setInputMessage]=useState('');const[accessToken,setAccessToken]=useState('');const[loading,setLoading]=useState(false);// State to track loading status\nconst sendMessage=async()=>{try{// Set loading state to true\nsetLoading(true);// Add the user's message to the messages array with \"Me: \" prefix and timestamp\nconst currentTime=new Date().toLocaleTimeString();const userMessage=inputMessage;const updatedMessages=[...messages,{sender:'Me',text:userMessage,timestamp:currentTime,profilePhotoUrl:meProfilePhotoUrl}];setMessages(updatedMessages);// Clear the input field\nsetInputMessage('');// Make a request to the Flask API endpoint with the user's message and access token\nconst response=await axios.post('http://127.0.0.1:4000/chatbot',{message:inputMessage,access_token:accessToken});const chatbotResponse=response.data.response;// Add the chatbot's response to the messages array with timestamp\nconst botMessage=chatbotResponse;const updatedMessagesWithBotResponse=[...updatedMessages,{sender:'Chatterbox',text:botMessage,timestamp:currentTime,profilePhotoUrl:chatProfilePhotoUrl}];setMessages(updatedMessagesWithBotResponse);}catch(error){console.error('Error sending message to chatbot:',error);}finally{// Set loading state to false after response or error\nsetLoading(false);}};const handleSendMessage=()=>{if(accessToken){sendMessage();}else{window.alert('Please fill in the access token.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-box\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:accessToken,onChange:e=>setAccessToken(e.target.value),placeholder:\"Paste your access token...\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-window\",children:[messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(message.sender==='Me'?'user':'Chatterbox'),children:[/*#__PURE__*/_jsx(\"img\",{src:message.profilePhotoUrl,alt:message.sender,className:\"profile-photo\",style:{width:'40px',height:'40px'}}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"strong\",{children:message.sender})}),/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:{__html:message.text}}),/*#__PURE__*/_jsx(\"span\",{className:\"timestamp\",children:message.timestamp})]})]},index)),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-text\",children:\"Loading...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputMessage,onChange:e=>setInputMessage(e.target.value),placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,children:\"Send\"})]})]});}export default ChatApp;","map":{"version":3,"names":["React","useState","axios","meProfilePhotoUrl","chatProfilePhotoUrl","jsx","_jsx","jsxs","_jsxs","ChatApp","messages","setMessages","inputMessage","setInputMessage","accessToken","setAccessToken","loading","setLoading","sendMessage","currentTime","Date","toLocaleTimeString","userMessage","updatedMessages","sender","text","timestamp","profilePhotoUrl","response","post","message","access_token","chatbotResponse","data","botMessage","updatedMessagesWithBotResponse","error","console","handleSendMessage","window","alert","className","children","type","value","onChange","e","target","placeholder","map","index","concat","src","alt","style","width","height","dangerouslySetInnerHTML","__html","onClick"],"sources":["/Users/jaydenj/Desktop/Canvas-Assistant-Bot/chatbot-frontend/src/ChatApp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport meProfilePhotoUrl from './circle.svg';\nimport chatProfilePhotoUrl from './circlelogo.svg';\n\nfunction ChatApp() {\n    const [messages, setMessages] = useState([]);\n    const [inputMessage, setInputMessage] = useState('');\n    const [accessToken, setAccessToken] = useState('');\n    const [loading, setLoading] = useState(false); // State to track loading status\n\n    const sendMessage = async () => {\n        try {\n            // Set loading state to true\n            setLoading(true);\n\n            // Add the user's message to the messages array with \"Me: \" prefix and timestamp\n            const currentTime = new Date().toLocaleTimeString();\n            const userMessage = inputMessage;\n            const updatedMessages = [...messages, { sender: 'Me', text: userMessage, timestamp: currentTime, profilePhotoUrl: meProfilePhotoUrl }];\n            setMessages(updatedMessages);\n\n            // Clear the input field\n            setInputMessage('');\n\n            // Make a request to the Flask API endpoint with the user's message and access token\n            const response = await axios.post('http://127.0.0.1:4000/chatbot', { message: inputMessage, access_token: accessToken });\n            const chatbotResponse = response.data.response;\n\n            // Add the chatbot's response to the messages array with timestamp\n            const botMessage = chatbotResponse;\n            const updatedMessagesWithBotResponse = [...updatedMessages, { sender: 'Chatterbox', text: botMessage, timestamp: currentTime, profilePhotoUrl: chatProfilePhotoUrl }];\n            setMessages(updatedMessagesWithBotResponse);\n\n        } catch (error) {\n            console.error('Error sending message to chatbot:', error);\n        } finally {\n            // Set loading state to false after response or error\n            setLoading(false);\n        }\n    };\n\n    const handleSendMessage = () => {\n        if (accessToken) {\n            sendMessage();\n        } else {\n            window.alert('Please fill in the access token.');\n        }\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <div className=\"input-box\">\n                <input\n                    type=\"text\"\n                    value={accessToken}\n                    onChange={(e) => setAccessToken(e.target.value)}\n                    placeholder=\"Paste your access token...\"\n                />\n            </div>\n            <div className=\"chat-window\">\n                {messages.map((message, index) => (\n                    <div key={index} className={`message ${message.sender === 'Me' ? 'user' : 'Chatterbox'}`}>\n                        <img src={message.profilePhotoUrl} alt={message.sender} className=\"profile-photo\" style={{ width: '40px', height: '40px' }} />\n                        <div>\n                            <div><strong>{message.sender}</strong></div>\n                            <div dangerouslySetInnerHTML={{ __html: message.text }}></div>\n                            <span className=\"timestamp\">{message.timestamp}</span>\n                        </div>\n                    </div>\n                ))}\n                {loading && <div className=\"loading-text\">Loading...</div>}\n            </div>\n            <div className=\"input-box\">\n                <input\n                    type=\"text\"\n                    value={inputMessage}\n                    onChange={(e) => setInputMessage(e.target.value)}\n                    placeholder=\"Type your message...\"\n                />\n                <button onClick={handleSendMessage}>Send</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ChatApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}